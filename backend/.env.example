# ========================================
# REQUIRED API KEYS
# ========================================

# Anthropic Claude API (for AI-powered insights)
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=key

# ========================================
# OPTIONAL API KEYS (Features work without these)
# ========================================

# Sentry Error Tracking (for production monitoring - FREE tier available)
# Get your DSN from: https://sentry.io/ (Create a project and copy DSN)
# Leave blank to disable error tracking
SENTRY_DSN=

# OpenWeather API (for weather data - FREE tier available)
# Get your API key from: https://home.openweathermap.org/api_keys
OPENWEATHER_API_KEY=key

# Mapbox API (for geocoding - FREE tier available)
# Get your API key from: https://account.mapbox.com/access-tokens/
MAPBOX_TOKEN=key

# Calendarific API (for holiday data - FREE tier available)
# Get your API key from: https://calendarific.com/api-documentation
CALENDARIFIC_API_KEY=key

# ScraperAPI (for competitor data scraping - PAID)
# Get your API key from: https://www.scraperapi.com/
# Optional - not required for basic functionality
SCRAPERAPI_KEY=your_scraperapi_key_here

# MakCorps Hotel Search API (for competitor hotels)
# Already configured in frontend
MAKCORPS_API_KEY=key

# ========================================
# SUPABASE CONFIGURATION (REQUIRED)
# ========================================

SUPABASE_URL=https://geehtuuyyxhyissplfjb.supabase.co
SUPABASE_ANON_KEY=key
SUPABASE_SERVICE_KEY=key

# ========================================
# SERVER CONFIGURATION
# ========================================

PORT=3001
NODE_ENV=development
FRONTEND_URL=http://localhost:5173
MAX_REQUESTS_PER_MINUTE=60

# ========================================
# PRICING ENGINE CONFIGURATION
# ========================================

# Pricing service URL (Python FastAPI microservice)
# Development: http://localhost:8000
# Production: https://pricing.your-domain.com
PRICING_SERVICE_URL=http://localhost:8000

# Enable automated learning cron job (Phase 2 - ML models)
# Set to "true" when ML models are trained and ready
# Currently disabled for Phase 1 (rule-based pricing)
ENABLE_CRON=false

# ========================================
# REDIS CONFIGURATION (Job Queue)
# ========================================

# Redis connection URL
# Development (local): redis://localhost:6379
# Production: redis://username:password@host:port
# Upstash Redis: redis://default:password@host.upstash.io:port
REDIS_URL=redis://localhost:6379

# Worker concurrency (number of jobs processed simultaneously)
ENRICHMENT_WORKER_CONCURRENCY=3
COMPETITOR_WORKER_CONCURRENCY=2
ANALYTICS_WORKER_CONCURRENCY=2

# Job chaining (auto-trigger analytics after enrichment)
# Set to "false" to disable automatic analytics after enrichment completes
ENABLE_AUTO_ANALYTICS=true

# ========================================
# gRPC CONFIGURATION (Task 17 - Optional)
# ========================================

# Enable gRPC for low-latency pricing service communication
# Set to "true" to use gRPC, "false" to use REST (automatic fallback)
ENABLE_GRPC=false

# gRPC server address (pricing service)
PRICING_GRPC_HOST=localhost:50051

# ========================================
# SMART ALERTS CONFIGURATION (Task 13)
# ========================================

# SendGrid API key for email delivery
SENDGRID_API_KEY=your-sendgrid-api-key

# Email sender configuration
ALERT_FROM_EMAIL=alerts@jengu.app
ALERT_FROM_NAME=Jengu Alerts
BASE_URL=https://app.jengu.com

# Alert scheduler configuration
ALERT_CRON_SCHEDULE=0 2 * * *  # Daily at 2 AM
ALERT_BATCH_SIZE=10
ENABLE_EMAIL_DIGEST=true

# ========================================
# OBSERVABILITY (Task 10)
# ========================================

# Sentry environment and tracing
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# Logging configuration
LOG_LEVEL=info
LOG_PRETTY=true
